from flask import Flask, request, jsonify

app = Flask(__name__)


# A place to-do list
tasks = []
current_id = 1  # To generate random task IDs


# Adding a new task
@app.route('/tasks', methods=['POST'])
def add_task():
    global current_id
    data = request.get_json()

    # Checking that all required fields are present
    if 'title' not in data or 'priority' not in data or 'isDone' not in data:
        return jsonify({'error': 'Missing fields'}), 400

    task = {
        'id': current_id,
        'title': data['title'],
        'priority': data['priority'],
        'isDone': data['isDone']
    }

    tasks.append(task)
    current_id += 1
    return jsonify(task), 201


# getting a list of all tasks
@app.route('/tasks', methods=['GET'])
def get_tasks():
    return jsonify(tasks), 200


# Getting a task by ID
@app.route('/tasks/<int:task_id>', methods=['GET'])
def get_task(task_id):
    task = next((task for task in tasks if task['id'] == task_id), None)
    if task:
        return jsonify(task), 200
    else:
        return jsonify({'error': 'Task not found'}), 404


# Updating a task by ID
@app.route('/tasks/<int:task_id>', methods=['PUT'])
def update_task(task_id):
    data = request.get_json()
    task = next((task for task in tasks if task['id'] == task_id), None)

    if task is None:
        return jsonify({'error': 'Task not found'}), 404

    # We update only those fields that are passed in the request
    task['title'] = data.get('title', task['title'])
    task['priority'] = data.get('priority', task['priority'])
    task['isDone'] = data.get('isDone', task['isDone'])

    return jsonify(task), 200


# Deleting a task by ID
@app.route('/tasks/<int:task_id>', methods=['DELETE'])
def delete_task(task_id):
    global tasks
    task = next((task for task in tasks if task['id'] == task_id), None)

    if task is None:
        return jsonify({'error': 'Task not found'}), 404

    tasks = [task for task in tasks if task['id'] != task_id]
    return jsonify({'message': 'Task deleted'}), 200


if __name__ == '__main__':
    app.run(debug=True)

